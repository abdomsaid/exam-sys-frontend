/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as Dashboard_layoutRouteImport } from './routes/_dashboard/__layout'
import { Route as AuthSignupRouteImport } from './routes/_auth/signup'
import { Route as AuthLoginRouteImport } from './routes/_auth/login'
import { Route as Dashboard_layoutIndexRouteImport } from './routes/_dashboard/__layout.index'
import { Route as Dashboard_layoutSettingsRouteImport } from './routes/_dashboard/__layout.settings'
import { Route as Dashboard_layoutQuestionsRouteImport } from './routes/_dashboard/__layout.questions'
import { Route as Dashboard_layoutExamsRouteImport } from './routes/_dashboard/__layout.exams'

const Dashboard_layoutRoute = Dashboard_layoutRouteImport.update({
  id: '/_dashboard/__layout',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthSignupRoute = AuthSignupRouteImport.update({
  id: '/_auth/signup',
  path: '/signup',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthLoginRoute = AuthLoginRouteImport.update({
  id: '/_auth/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const Dashboard_layoutIndexRoute = Dashboard_layoutIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => Dashboard_layoutRoute,
} as any)
const Dashboard_layoutSettingsRoute =
  Dashboard_layoutSettingsRouteImport.update({
    id: '/settings',
    path: '/settings',
    getParentRoute: () => Dashboard_layoutRoute,
  } as any)
const Dashboard_layoutQuestionsRoute =
  Dashboard_layoutQuestionsRouteImport.update({
    id: '/questions',
    path: '/questions',
    getParentRoute: () => Dashboard_layoutRoute,
  } as any)
const Dashboard_layoutExamsRoute = Dashboard_layoutExamsRouteImport.update({
  id: '/exams',
  path: '/exams',
  getParentRoute: () => Dashboard_layoutRoute,
} as any)

export interface FileRoutesByFullPath {
  '/login': typeof AuthLoginRoute
  '/signup': typeof AuthSignupRoute
  '/exams': typeof Dashboard_layoutExamsRoute
  '/questions': typeof Dashboard_layoutQuestionsRoute
  '/settings': typeof Dashboard_layoutSettingsRoute
  '/': typeof Dashboard_layoutIndexRoute
}
export interface FileRoutesByTo {
  '/login': typeof AuthLoginRoute
  '/signup': typeof AuthSignupRoute
  '/exams': typeof Dashboard_layoutExamsRoute
  '/questions': typeof Dashboard_layoutQuestionsRoute
  '/settings': typeof Dashboard_layoutSettingsRoute
  '/': typeof Dashboard_layoutIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_auth/login': typeof AuthLoginRoute
  '/_auth/signup': typeof AuthSignupRoute
  '/_dashboard/__layout': typeof Dashboard_layoutRouteWithChildren
  '/_dashboard/__layout/exams': typeof Dashboard_layoutExamsRoute
  '/_dashboard/__layout/questions': typeof Dashboard_layoutQuestionsRoute
  '/_dashboard/__layout/settings': typeof Dashboard_layoutSettingsRoute
  '/_dashboard/__layout/': typeof Dashboard_layoutIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/login' | '/signup' | '/exams' | '/questions' | '/settings' | '/'
  fileRoutesByTo: FileRoutesByTo
  to: '/login' | '/signup' | '/exams' | '/questions' | '/settings' | '/'
  id:
    | '__root__'
    | '/_auth/login'
    | '/_auth/signup'
    | '/_dashboard/__layout'
    | '/_dashboard/__layout/exams'
    | '/_dashboard/__layout/questions'
    | '/_dashboard/__layout/settings'
    | '/_dashboard/__layout/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  AuthLoginRoute: typeof AuthLoginRoute
  AuthSignupRoute: typeof AuthSignupRoute
  Dashboard_layoutRoute: typeof Dashboard_layoutRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_dashboard/__layout': {
      id: '/_dashboard/__layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof Dashboard_layoutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth/signup': {
      id: '/_auth/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof AuthSignupRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth/login': {
      id: '/_auth/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof AuthLoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_dashboard/__layout/': {
      id: '/_dashboard/__layout/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof Dashboard_layoutIndexRouteImport
      parentRoute: typeof Dashboard_layoutRoute
    }
    '/_dashboard/__layout/settings': {
      id: '/_dashboard/__layout/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof Dashboard_layoutSettingsRouteImport
      parentRoute: typeof Dashboard_layoutRoute
    }
    '/_dashboard/__layout/questions': {
      id: '/_dashboard/__layout/questions'
      path: '/questions'
      fullPath: '/questions'
      preLoaderRoute: typeof Dashboard_layoutQuestionsRouteImport
      parentRoute: typeof Dashboard_layoutRoute
    }
    '/_dashboard/__layout/exams': {
      id: '/_dashboard/__layout/exams'
      path: '/exams'
      fullPath: '/exams'
      preLoaderRoute: typeof Dashboard_layoutExamsRouteImport
      parentRoute: typeof Dashboard_layoutRoute
    }
  }
}

interface Dashboard_layoutRouteChildren {
  Dashboard_layoutExamsRoute: typeof Dashboard_layoutExamsRoute
  Dashboard_layoutQuestionsRoute: typeof Dashboard_layoutQuestionsRoute
  Dashboard_layoutSettingsRoute: typeof Dashboard_layoutSettingsRoute
  Dashboard_layoutIndexRoute: typeof Dashboard_layoutIndexRoute
}

const Dashboard_layoutRouteChildren: Dashboard_layoutRouteChildren = {
  Dashboard_layoutExamsRoute: Dashboard_layoutExamsRoute,
  Dashboard_layoutQuestionsRoute: Dashboard_layoutQuestionsRoute,
  Dashboard_layoutSettingsRoute: Dashboard_layoutSettingsRoute,
  Dashboard_layoutIndexRoute: Dashboard_layoutIndexRoute,
}

const Dashboard_layoutRouteWithChildren =
  Dashboard_layoutRoute._addFileChildren(Dashboard_layoutRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  AuthLoginRoute: AuthLoginRoute,
  AuthSignupRoute: AuthSignupRoute,
  Dashboard_layoutRoute: Dashboard_layoutRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
